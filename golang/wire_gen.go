// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"go-rest-api/controller"
	"go-rest-api/db"
	"go-rest-api/repository"
	"go-rest-api/usecase"
	"go-rest-api/validator"
)

// Injectors from wire_gen.go:

func InitializeTaskController() *controller.TaskController {
	sqlDB := db.NewDB()
	iTaskRepository := repository.NewTaskRepository(sqlDB)
	iTaskValidator := validator.NewTaskValidator()
	iTaskUsecase := usecase.NewTaskUsecase(iTaskRepository, iTaskValidator)
	iTaskController := controller.NewTaskController(iTaskUsecase)
	taskController := NewTaskController(iTaskController)
	return taskController
}

// wire_gen.go:

func InitializeUserController() *controller.UserController {
	sqlDB := db.NewDB()
	iUserRepository := repository.NewUserRepository(sqlDB)
	iUserValidator := validator.NewUserValidator()
	iUserUsecase := usecase.NewUserUsecase(iUserRepository, iUserValidator)
	iUserController := controller.NewUserController(iUserUsecase)
	userController := NewUserController(iUserController)
	return userController
}

func NewUserController(uuc controller.IUserController) *controller.UserController {
	return uuc.(*controller.UserController)
}

func NewTaskController(utc controller.ITaskController) *controller.TaskController {
	return utc.(*controller.TaskController)
}
